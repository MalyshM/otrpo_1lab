version: '3'

services:
  db:
    image: malyshm/postgres:v1.0
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  app:
    build: .
    container_name: uuzzuumm_true_shower
    ports:
      - '8090:80'
#      python create_db.py;
    command: bash -c "python create_db.py; uvicorn main:app --host 0.0.0.0 --port 80"
    env_file:
      - .env
    volumes:
      - /app/FTP:/app/FTP
    environment:
      - PYTHONPATH=/app/app
    depends_on:
      - db
      - ftp
      - redis

  redis:
    image: redis:latest
    ports:
      - '6379:6379'

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - db

  ftp:
    build: .
    container_name: ftp
    environment:
      - PYTHONPATH=/app/app
    command: bash -c "cd app; python ftp_start.py;"
    volumes:
      - /app/FTP:/app/FTP
    depends_on:
      - db
    ports:
      - '2121:2121'

  unit_tests:
    build: .
    container_name: unit_tests
#    command: bash -c "cd app; python unit_tests_handlers.py;"
    volumes:
      - /app/FTP:/app/FTP
    environment:
      - PYTHONPATH=/app/app
    depends_on:
      - app
      - redis
      - db
      - ftp
  selenium_tests:
    build: .
    container_name: selenium_tests
#    command: bash -c "cd app; python selenium_tests.py;"
    volumes:
      - /app/FTP:/app/FTP
    environment:
      - PYTHONPATH=/app/app
    depends_on:
      - app
      - redis
      - db
      - ftp
volumes:
  app_data:
  grafana_data:


